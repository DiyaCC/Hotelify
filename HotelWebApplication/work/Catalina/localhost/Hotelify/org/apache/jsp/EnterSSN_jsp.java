/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.39
 * Generated at: 2025-03-26 19:01:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class EnterSSN_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Enter SSN</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/styles.css\">\r\n");
      out.write("    <link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet'>\r\n");
      out.write("    <style> /* this is entirely for fun and was copied from chat GPT. We will definitely remove it, but it looks sooo nice :))))) - Diya\r\n");
      out.write("        /* Reset and base styles */\r\n");
      out.write("        body {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f2f2f2;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Navigation bar styling */\r\n");
      out.write("        #navBar {\r\n");
      out.write("            background-color: #4a90e2;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 15px 25px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #navBar h3 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 24px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #navBar .links {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #navBar .links a {\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #navBar .links a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* SSN Form Container */\r\n");
      out.write("        .SSN-container {\r\n");
      out.write("            max-width: 400px;\r\n");
      out.write("            margin: 60px auto;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            padding: 25px 30px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            box-shadow: 0 4px 10px rgba(0,0,0,0.1);\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .SSN-container h2 {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Input field styling */\r\n");
      out.write("        .SSN_input {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .SSN_input label {\r\n");
      out.write("            margin-bottom: 8px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .SSN_input input {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            transition: border\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        var parameters = new URLSearchParams(window.location.search);\r\n");
      out.write("        var hotel_id = parameters.get(\"hotel_id\")\r\n");
      out.write("        var roomtype = parameters.get(\"roomtype\")\r\n");
      out.write("        var checkin = parameters.get(\"checkin\")\r\n");
      out.write("        var checkout = parameters.get(\"checkout\")\r\n");
      out.write("        var rooms=parameters.get(\"rooms\")\r\n");
      out.write("\r\n");
      out.write("        document.addEventListener(\"DOMContentLoaded\", function() {\r\n");
      out.write("            document.getElementById(\"SSNEntry\").addEventListener(\"submit\", function(event) {\r\n");
      out.write("                event.preventDefault();\r\n");
      out.write("                let SSN = document.getElementById(\"SSN\").value.trim();\r\n");
      out.write("\r\n");
      out.write("                if (SSN === \"\"){\r\n");
      out.write("                    alert(\"Please provide a valid SSN\");\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                fetch(\"searchSSN\", {\r\n");
      out.write("                    method: \"POST\", // this is a method used for sending data\r\n");
      out.write("                    headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }, // indicates the data is coming from a form\r\n");
      out.write("                    body: \"SSN=\" + encodeURIComponent(SSN) // send the data from the input field\r\n");
      out.write("                }).then(response => response.text()).then(data => {\r\n");
      out.write("                    document.getElementById(\"response\").innerHTML = data;\r\n");
      out.write("                }).catch(error => console.error(\"Error:\", error));\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        function redirectToCreateAccount() {\r\n");
      out.write("            window.location.href = `createAccount.jsp?hotel_id=${hotel_id}&roomtype=${roomtype}&checkin=${checkin}&checkout=${checkout}&rooms=${rooms}`;\r\n");
      out.write("        }\r\n");
      out.write("        function redirectToConfirm(){\r\n");
      out.write("            SSN = document.getElementById(\"SSN\").value.trim();\r\n");
      out.write("            window.location.href = `ConfirmBooking.jsp?hotel_id=${hotel_id}&roomtype=${roomtype}&checkin=${checkin}&checkout=${checkout}&rooms=${rooms}&customerid=${SSN}`\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"navBar\">\r\n");
      out.write("        <h3>HOTELIFY</h3>\r\n");
      out.write("        <div class=\"links row\">\r\n");
      out.write("            <a href=\"index.jsp\">Home</a>\r\n");
      out.write("            <br>\r\n");
      out.write("            <a href=\"employee.jsp\" class=\"link\">Employee Page</a>\r\n");
      out.write("            <br>\r\n");
      out.write("            <a href=\"Hotels.jsp\" class=\"link\">Hotels</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"SSN-container\">\r\n");
      out.write("        <h2> Time to Book a Room! </h2>\r\n");
      out.write("        <form id=\"SSNEntry\">\r\n");
      out.write("            <div class = \"SSN_input\">\r\n");
      out.write("                <label for=\"SSN\">SSN</label>\r\n");
      out.write("                <input type=\"text\" id=\"SSN\" name = \"SSN\" placeholder = \"Enter your SSN\">\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <button type = \"submit\">Go!</button>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <div id=\"response\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
