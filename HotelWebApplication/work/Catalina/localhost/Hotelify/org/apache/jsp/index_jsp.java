/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.39
 * Generated at: 2025-03-23 15:14:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"assets/css/styles.css\" >\r\n");
      out.write("        <link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet'>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        <div id=\"navBar\">\r\n");
      out.write("            <h3>HOTELS</h3>\r\n");
      out.write("            <a href=\"employee.jsp\">EmployeePage</a>\r\n");
      out.write("            <script>\r\n");
      out.write("                function searchForHotels(){\r\n");
      out.write("                        document.getElementById(\"invalidInputDestination\").classList.add(\"hidden\")\r\n");
      out.write("                        document.getElementById(\"invalidInputCheckin\").classList.add(\"hidden\")\r\n");
      out.write("                        document.getElementById(\"invalidInputCheckout\").classList.add(\"hidden\")\r\n");
      out.write("                        document.getElementById(\"invalidInputRooms\").classList.add(\"hidden\")\r\n");
      out.write("                        var destination = document.getElementById(\"destination\").value;\r\n");
      out.write("                        var checkin = document.getElementById(\"Check-in\").value;\r\n");
      out.write("                        var checkout = document.getElementById(\"Check-out\").value;\r\n");
      out.write("                        var rooms = document.getElementById(\"Rooms\").value;\r\n");
      out.write("                        var stars = document.getElementById(\"stardrop\").value;\r\n");
      out.write("\r\n");
      out.write("                        var valid = validate(destination, checkin, checkout, rooms)\r\n");
      out.write("                        if (valid){\r\n");
      out.write("                            var url = `availableHotels?city=${encodeURIComponent(destination)}&rooms=${encodeURIComponent(rooms)}&checkin=${encodeURIComponent(checkin)}&checkout=${encodeURIComponent(checkout)}&star=${encodeURIComponent(stars)}`\r\n");
      out.write("                            fetch(url).then(response => response.text()).then(data => {\r\n");
      out.write("                                if (!data){\r\n");
      out.write("                                    const notFound = `<div class=\"widgetRow row\"><h4>No Results Found :(</h4></div>`\r\n");
      out.write("                                    document.getElementById(\"results\").innerHTML = notFound;\r\n");
      out.write("\r\n");
      out.write("                                } else {\r\n");
      out.write("                                    document.getElementById(\"results\").innerHTML = data;\r\n");
      out.write("                                }\r\n");
      out.write("\r\n");
      out.write("                            }).catch(error => console.error(\"Error finding rooms:\", error))\r\n");
      out.write("                        }\r\n");
      out.write("                }\r\n");
      out.write("                function validate(destination, checkin, checkout, rooms){\r\n");
      out.write("                    var valid = true;\r\n");
      out.write("                    if (typeof destination !== \"string\" || destination===\"\"){\r\n");
      out.write("                        valid=false;\r\n");
      out.write("                        document.getElementById(\"invalidInputDestination\").classList.remove(\"hidden\")\r\n");
      out.write("                    }\r\n");
      out.write("                    try{\r\n");
      out.write("                        new Date(checkin);\r\n");
      out.write("                        if (checkin===\"\"){\r\n");
      out.write("                            document.getElementById(\"invalidInputCheckin\").classList.remove(\"hidden\")\r\n");
      out.write("                        }\r\n");
      out.write("                    } catch {\r\n");
      out.write("                        valid=false;\r\n");
      out.write("                        document.getElementById(\"invalidInputCheckin\").classList.remove(\"hidden\")\r\n");
      out.write("                    }\r\n");
      out.write("                    try {\r\n");
      out.write("                        new Date(checkout);\r\n");
      out.write("                        if (checkout===\"\"){\r\n");
      out.write("                            document.getElementById(\"invalidInputCheckout\").classList.remove(\"hidden\")\r\n");
      out.write("                        }\r\n");
      out.write("                    } catch {\r\n");
      out.write("                        valid=false;\r\n");
      out.write("                        document.getElementById(\"invalidInputCheckout\").classList.remove(\"hidden\")\r\n");
      out.write("                    }\r\n");
      out.write("                    if (rooms === \"\"){\r\n");
      out.write("                        valid=false;\r\n");
      out.write("                        document.getElementById(\"invalidInputRooms\").classList.remove(\"hidden\")\r\n");
      out.write("                    } else {\r\n");
      out.write("                        try {\r\n");
      out.write("                            var roomsInt = parseInt(rooms)\r\n");
      out.write("                            if (roomsInt<=0){\r\n");
      out.write("                                valid=false;\r\n");
      out.write("                                document.getElementById(\"invalidInputRooms\").classList.remove(\"hidden\")\r\n");
      out.write("                            }\r\n");
      out.write("                        } catch {\r\n");
      out.write("                            valid=false;\r\n");
      out.write("                            document.getElementById(\"invalidInputRooms\").classList.remove(\"hidden\")\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                    return valid\r\n");
      out.write("\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            </script>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"home\">\r\n");
      out.write("            <img src=\"assets/Images/HomePhoto.png\" class=\"homePhoto\">\r\n");
      out.write("            <div class=\"pageContent\">\r\n");
      out.write("                <div class=\"searchBarDestinations\">\r\n");
      out.write("                    <div class=\"row\">\r\n");
      out.write("                        <h2>Your Next Adventure Awaits</h2>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"row inputDestinations\">\r\n");
      out.write("                        <div class=\"col param\">\r\n");
      out.write("                            <div class=\"row\">\r\n");
      out.write("                                <img src=\"assets/Images/Error.png\" class=\"hidden invalidInput\" id=\"invalidInputDestination\">\r\n");
      out.write("                                <label for=\"destination\">Destination</label>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <input type=\"text\" id=\"destination\" class=\"inputFieldsDestinations\" placeholder=\"Punta Cana\"/>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col param\">\r\n");
      out.write("                            <div class=\"row\">\r\n");
      out.write("                                <img src=\"assets/Images/Error.png\" class=\"hidden invalidInput\" id=\"invalidInputCheckin\">\r\n");
      out.write("                                <label for=\"Check-in\">Check-in</label>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <input type=\"text\" id=\"Check-in\" class=\"inputFieldsDestinations\" placeholder=\"YYYY/MM/DD\"/>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col param\">\r\n");
      out.write("                            <div class=\"row\">\r\n");
      out.write("                                <img src=\"assets/Images/Error.png\" class=\"hidden invalidInput\" id=\"invalidInputCheckout\">\r\n");
      out.write("                                <label for=\"Check-out\">Check-out</label>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <input type=\"text\" id=\"Check-out\" class=\"inputFieldsDestinations\" placeholder=\"YYYY/MM/DD\"/>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col param\">\r\n");
      out.write("                            <div class=\"row\">\r\n");
      out.write("                                <img src=\"assets/Images/Error.png\" class=\"hidden invalidInput\" id=\"invalidInputRooms\">\r\n");
      out.write("                                <label for=\"Rooms\">Rooms</label>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <input type=\"text\" id=\"Rooms\" class=\"inputFieldsDestinations\" placeholder=\"1\"/>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col param\">\r\n");
      out.write("                            <label for=\"Star-Rating\">Star Rating</label>\r\n");
      out.write("                            <div class=\"row\" id=\"Star-Rating\">\r\n");
      out.write("                                <select class=\"star\" id=\"stardrop\">\r\n");
      out.write("                                    <option value=\"1\">1 star</option>\r\n");
      out.write("                                    <option value=\"2\">2 stars</option>\r\n");
      out.write("                                    <option value=\"3\">3 stars</option>\r\n");
      out.write("                                    <option value=\"4\">4 stars</option>\r\n");
      out.write("                                    <option value=\"5\">5 stars</option>\r\n");
      out.write("                                </select>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col param\">\r\n");
      out.write("                            <button class=\"buttons\" id=\"searchForHotels\" onClick=\"searchForHotels()\">Search</button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id=\"results\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
